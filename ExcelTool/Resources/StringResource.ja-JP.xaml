<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <sys:String x:Key="WinTitle">エクセルツール</sys:String>

    <sys:String x:Key="MenuOpen">開く (_O)</sys:String>
    <sys:String x:Key="MenuSheetExplainerFolder">検索情報フォルダ (_E)</sys:String>
    <sys:String x:Key="MenuAnalyzerFolder">エクセルファイル処理のロジックフォルダ (_A)</sys:String>
    <sys:String x:Key="MenuDLLFolder">DLLフォルダ (_D)</sys:String>
    <sys:String x:Key="MenuRuleFolder">ルールフォルダ (_R)</sys:String>
    <sys:String x:Key="MenuWorkFolder">作業ベース (_W)</sys:String>
    <sys:String x:Key="MenuOutputFolder">出力ディレクトリ (_O)</sys:String>
    <sys:String x:Key="MenuOutputFile">出力ファイル (_F)</sys:String>
    <sys:String x:Key="MenuHelp">ヘルプ (_H)</sys:String>
    <sys:String x:Key="MenuSetting">設定 (_S)</sys:String>
    <sys:String x:Key="Setting">設定</sys:String>
    <sys:String x:Key="MenuTheme">テーマ (_T)</sys:String>
    <sys:String x:Key="MenuLanguage">言語 (_L)</sys:String>
    <sys:String x:Key="SetLanguage">言語設定</sys:String>
    <sys:String x:Key="MenuDLLSecurityCheck">DLLファイルセキュリティーチェック (_D)</sys:String>
    <sys:String x:Key="DLLSecurityCheck">DLLファイルセキュリティーチェック</sys:String>
    <sys:String x:Key="IsEnable">有効にするかどうか</sys:String>
    <sys:String x:Key="MenuThreadRelated">スレッド関連 (_T)</sys:String>
    <sys:String x:Key="MenuMaxThreadCount">スレッドの最大数 (_M)</sys:String>
    <sys:String x:Key="MenuTotalTimeoutLimitAnalyze">分析フェーズのタイムアウト (_T)</sys:String>
    <sys:String x:Key="MenuPerTimeoutLimitAnalyze">単一の分析のタイムアウト (_P)</sys:String>
    <sys:String x:Key="MenuTotalTimeoutLimitOutput">出力ステージのタイムアウト (_T)</sys:String>
    <sys:String x:Key="MenuPerTimeoutLimitOutput">単一出力タイムアウト (_P)</sys:String>
    <sys:String x:Key="MenuFileSystemWatcherInvokeDalay">ウォッチファイル反応時間 (_D)</sys:String>
    <sys:String x:Key="MenuFreshInterval">スレッド内のインターフェイスの更新間隔 (_F)</sys:String>
    <sys:String x:Key="MaxThreadCount">スレッドの最大数</sys:String>
    <sys:String x:Key="TotalTimeoutLimitAnalyze">分析フェーズのタイムアウト (ms)</sys:String>
    <sys:String x:Key="PerTimeoutLimitAnalyze">単一の分析のタイムアウト (ms)</sys:String>
    <sys:String x:Key="TotalTimeoutLimitOutput">出力ステージのタイムアウト (ms)</sys:String>
    <sys:String x:Key="PerTimeoutLimitOutput">単一出力タイムアウト (ms)</sys:String>
    <sys:String x:Key="FileSystemWatcherInvokeDalay">ウォッチファイル反応時間 (ms)</sys:String>
    <sys:String x:Key="FreshInterval">スレッド内のインターフェイスの更新間隔 (ms)</sys:String>
    <sys:String x:Key="MenuSourceCode">ソフトウェアのソースコード (_C)</sys:String>
    <sys:String x:Key="OpenBrowser">ブラウザが開こうとしています。続行しますか？</sys:String>
    <sys:String x:Key="MenuShowSpaces">空白の表示 (_S)</sys:String>
    <sys:String x:Key="MenuShowTabs">タブの表示 (_T)</sys:String>
    <sys:String x:Key="MenuShowEndOfLine">行末の表示 (_E)</sys:String>
    <sys:String x:Key="MenuShowBoxForControlCharacters">制御文字ボックスの表示 (_B)</sys:String>
    <sys:String x:Key="MenuEnableHyperlinks">ハイパーリンクを有効にする (_H)</sys:String>
    <sys:String x:Key="MenuIndentationSize">インデント文字数 (_I)</sys:String>
    <sys:String x:Key="IndentationSize">インデント文字数</sys:String>
    <sys:String x:Key="MenuConvertTabsToSpaces">タブをスペースに変換 (_C)</sys:String>
    <sys:String x:Key="MenuHighlightCurrentLine">現在の行をハイライト (_H)</sys:String>
    <sys:String x:Key="MenuHideCursorWhileTyping">入力時にカーソルを隠す (_C)</sys:String>
    <sys:String x:Key="MenuWordWrap">自動改行 (_W)</sys:String>
    <sys:String x:Key="MenuShowLineNumbers">行番号の表示 (_N)</sys:String>

    <sys:String x:Key="Analyzer">エクセルファイル処理のロジック</sys:String>
    <sys:String x:Key="SheetExplainer">検索情報</sys:String>
    <sys:String x:Key="SetSheetExplainer">検索情報の設定</sys:String>
    <sys:String x:Key="SetAnalyzer">エクセルファイル処理のロジックの設定</sys:String>
    <sys:String x:Key="Parameter">パラメータ</sys:String>
    <sys:String x:Key="Edit">編集</sys:String>
    <sys:String x:Key="Workbase">ワークベース [検索情報に相対パスを入力したの場合]</sys:String>
    <sys:String x:Key="Select">選択</sys:String>
    <sys:String x:Key="OutputPath">出力ディレクトリ</sys:String>
    <sys:String x:Key="Open">開く</sys:String>
    <sys:String x:Key="OutputFileName">出力ファイル名</sys:String>
    <sys:String x:Key="Rule">ルール</sys:String>
    <sys:String x:Key="Save">保存</sys:String>
    <sys:String x:Key="Close">閉じる</sys:String>
    <sys:String x:Key="Delete">削除</sys:String>
    <sys:String x:Key="AutomaticallyOpening">終了すると自動的に開く</sys:String>
    <sys:String x:Key="Stop">停止</sys:String>
    <sys:String x:Key="Start">開始</sys:String>
    <sys:String x:Key="AnalyzerEditor">ロジックエディタ</sys:String>
    <sys:String x:Key="EditParameter">パラメータ編集</sys:String>
    <sys:String x:Key="SheetExplainerEditor">検索情報エディタ</sys:String>
    <sys:String x:Key="PathList">パス一覧</sys:String>
    <sys:String x:Key="FileNameList">ファイル名一覧</sys:String>
    <sys:String x:Key="Same">同じ</sys:String>
    <sys:String x:Key="Contain">含む</sys:String>
    <sys:String x:Key="RegExp">正規表現</sys:String>
    <sys:String x:Key="All">全部</sys:String>
    <sys:String x:Key="SheetNameList">シート名一覧</sys:String>
    <sys:String x:Key="Error">エラー</sys:String>
    <sys:String x:Key="PathNotExists">パスが存在しません</sys:String>
    <sys:String x:Key="Ok">OK</sys:String>
    <sys:String x:Key="Timeout">タイムアウト</sys:String>
    <sys:String x:Key="TotalTimeout">合計時間タイムアウト</sys:String>
    <sys:String x:Key="Analyzing">分析しています...</sys:String>
    <sys:String x:Key="ExceptionHasBeenThrowed">例外がスローされました</sys:String>
    <sys:String x:Key="Outputting">出力しています...</sys:String>
    <sys:String x:Key="Info">インフォメーション</sys:String>
    <sys:String x:Key="FileNotSaved">ファイルの保存に失敗しました</sys:String>
    <sys:String x:Key="OpenFile">ファイルを開く</sys:String>
    <sys:String x:Key="OpenPath">オープンパス</sys:String>
    <sys:String x:Key="FileSaved">ファイルを保存しました</sys:String>
    <sys:String x:Key="AutoOpened">ファイルは自動的に開かれました</sys:String>
    <sys:String x:Key="FailedToSaveFile">保存に失敗しました。再試行してください。</sys:String>
    <sys:String x:Key="Yes">はい</sys:String>
    <sys:String x:Key="No">いいえ</sys:String>
    <sys:String x:Key="FailedToCreateANewFolder">新しいフォルダの作成に失敗しました</sys:String>
    <sys:String x:Key="Warning">ウォーニング</sys:String>
    <sys:String x:Key="ProgramClosingCheck">閉じられていない子ウィンドウがあります、このまま続行しますか？</sys:String>
    <sys:String x:Key="Cancel">ﾁｬﾝセル</sys:String>
    <sys:String x:Key="Saving">保存</sys:String>
    <sys:String x:Key="Name">名前</sys:String>
    <sys:String x:Key="WatchPath">監視パスを入力してください</sys:String>
    <sys:String x:Key="WatchFilter">監視ファイルに一致する式を入力してください</sys:String>
    <sys:String x:Key="WatchPathNotExists">監視パスが存在しません</sys:String>
    <sys:String x:Key="Unknown">不明な</sys:String>
    <sys:String x:Key="SetAuto">自動に設定</sys:String>
    <sys:String x:Key="SetManual">手動に設定</sys:String>
    <sys:String x:Key="SuccessfullySaved">正常に保存されました</sys:String>
    <sys:String x:Key="Copied">クリップボードにコピーしました</sys:String>
    <sys:String x:Key="ParameterEditor">パラメータエクセル</sys:String>
    <sys:String x:Key="ActiveThreads">アクティブスレッド</sys:String>
    <sys:String x:Key="InUseThreads">使用中のスレッド</sys:String>
    <sys:String x:Key="SelectFile">ファイルを選択してください</sys:String>
    <sys:String x:Key="File">ファイル</sys:String>
    <sys:String x:Key="ParamKey">パラメータキー</sys:String>
    <sys:String x:Key="ParamDescription">パラメータ説明</sys:String>
    <sys:String x:Key="ParamPossibleValues">可能な値</sys:String>
    <sys:String x:Key="ExecuteInSequence">順番に実行する</sys:String>
    <sys:String x:Key="RunFailed">実行に失敗しました</sys:String>
    <sys:String x:Key="FileIsInUse">ファイルが使用中</sys:String>
    <sys:String x:Key="FileIsDamaged">ファイルが破損している</sys:String>
    <sys:String x:Key="MethodNotFound">関数{0}が見つかりません</sys:String>
    <sys:String x:Key="FileNotFound">ファイル{0}が見つかりません</sys:String>
    <sys:String x:Key="UnblockDllsCopiedFromTheWeb" xml:space="preserve">.Dllファイル「{0}」がサポートされていないかネットワークまたはほかのコンピュータから取得されましたから、先に許可して、ソフトウェアを再起動してください。&#13;&#10;1. ファイルを右クリックして「プロパティ」を開く&#13;&#10;2. 「全般」タブの「許可する」ボタンをクリックする&#13;&#10;3. 「OK」ボタンをクリックする&#13;&#10;セキュリティチェックをバイパスするには、設定を変更してください。</sys:String>
    <sys:String x:Key="FileNotSupported">.Dllファイル{0}はサポートされていません</sys:String>
    <sys:String x:Key="Code" xml:space="preserve">using ClosedXML.Excel;
using GlobalObjects;
using System;
using System.Collections.Concurrent;
using System.Collections.Generic;

namespace AnalyzeCode
{
    class Analyze
    {
        /// &lt;summary>
        /// すべての分析の前に呼び出されます
        /// &lt;/summary>
        /// &lt;param name="param">着信パラメータ&lt;/param>
        /// &lt;param name="globalObject">グローバルに存在し、現在の行番号など、他の呼び出しで使用する必要のあるデータを保存できます。&lt;/param>
        /// &lt;param name="allFilePathList">分析されるすべてのファイルパスのリスト&lt;/param>
        /// &lt;param name="isExecuteInSequence">順番実行するかどうか&lt;/param>
        public void RunBeforeAnalyzeSheet(Param param, ref Object globalObject, List&lt;string> allFilePathList, bool isExecuteInSequence)
        {
            
        }

        /// &lt;summary>
        /// シートを分析する
        /// &lt;/summary>
        /// &lt;param name="param">着信パラメータ&lt;/param>
        /// &lt;param name="sheet">分析するシート&lt;/param>
        /// &lt;param name="result">現在のファイルの情報を保存するResultType{（String）FILEPATH [file path]、（String）FILENAME [file name]、（String）MESSAGE [検索に問題がある場合に出力されるメッセージ]、（Object）RESULTOBJECT [user-定義された分析結果]}&lt;/param>
        /// &lt;param name="globalObject">グローバルに存在し、現在の行番号など、他の呼び出しで使用する必要のあるデータを保存できます。&lt;/param>
        /// &lt;param name="isExecuteInSequence">順番実行するかどうか&lt;/param>
        /// &lt;param name="invokeCount">この分析関数が呼び出された回数&lt;/param>
        public void AnalyzeSheet(Param param, IXLWorksheet sheet, ConcurrentDictionary&lt;ResultType, Object> result, ref Object globalObject, bool isExecuteInSequence, int invokeCount)
        {
            
        }

        /// &lt;summary>
        /// すべての出力の前に呼び出されます
        /// &lt;/summary>
        /// &lt;param name="param">着信パラメータ&lt;/param>
        /// &lt;param name="workbook">出力用のExcelファイル&lt;/param>
        /// &lt;param name="globalObject">グローバルに存在し、現在の行番号など、他の呼び出しで使用する必要のあるデータを保存できます。&lt;/param>
        /// &lt;param name="resultList">すべてのファイルに関する情報&lt;/param>
        /// &lt;param name="allFilePathList">分析されたすべてのファイルパスのリスト&lt;/param>
        /// &lt;param name="isExecuteInSequence">順番実行するかどうか&lt;/param>
        public void RunBeforeSetResult(Param param, XLWorkbook workbook, ref Object globalObject, ICollection&lt;ConcurrentDictionary&lt;ResultType, Object>> resultList, List&lt;string> allFilePathList, bool isExecuteInSequence)
        {
            
        }

        /// &lt;summary>
        /// 分析結果をExcelにエクスポートする
        /// &lt;/summary>
        /// &lt;param name="param">着信パラメータ&lt;/param>
        /// &lt;param name="workbook">出力用のExcelファイル&lt;/param>
        /// &lt;param name="result">現在のファイルの情報を保存するResultType{（String）FILEPATH [file path]、（String）FILENAME [file name]、（String）MESSAGE [検索に問題がある場合に出力されるメッセージ]、（Object）RESULTOBJECT [user-定義された分析結果]}&lt;/param>
        /// &lt;param name="globalObject">グローバルに存在し、現在の行番号など、他の呼び出しで使用する必要のあるデータを保存できます。&lt;/param>
        /// &lt;param name="isExecuteInSequence">順番実行するかどうか&lt;/param>
        /// &lt;param name="invokeCount">この出力関数が呼び出された回数&lt;/param>
        /// &lt;param name="totalCount">出力関数を呼び出す必要がある合計回数&lt;/param>
        public void SetResult(Param param, XLWorkbook workbook, ConcurrentDictionary&lt;ResultType, Object> result, ref Object globalObject, bool isExecuteInSequence, int invokeCount, int totalCount)
        {
            
        }

        /// &lt;summary>
        /// すべての通話が終了した後に呼び出されます
        /// &lt;/summary>
        /// &lt;param name="param">着信パラメータ&lt;/param>
        /// &lt;param name="workbook">出力用のExcelファイル&lt;/param>
        /// &lt;param name="globalObject">グローバルに存在し、現在の行番号など、他の呼び出しで使用する必要のあるデータを保存できます。&lt;/param>
        /// &lt;param name="resultList">すべてのファイルに関する情報&lt;/param>
        /// &lt;param name="allFilePathList">分析されたすべてのファイルパスのリスト&lt;/param>
        /// &lt;param name="isExecuteInSequence">順番実行するかどうか&lt;/param>
        public void RunEnd(Param param, XLWorkbook workbook, ref Object globalObject, ICollection&lt;ConcurrentDictionary&lt;ResultType, Object>> resultList, List&lt;string> allFilePathList, bool isExecuteInSequence)
        {
            
        }
    }
}</sys:String>
    <sys:String x:Key="NoAction">何もしない</sys:String>
    <sys:String x:Key="CloseTheProgramOnly">プログラムを閉じるだけ</sys:String>
    <sys:String x:Key="BanSecurityCheckWithoutRestart">今後、セキュリティチェックは不要になります（プログラムの再起動後に有効になります）</sys:String>
    <sys:String x:Key="BanSecurityCheckWithRestart">今後、セキュリティチェックは不要になります、プログラムを再起動します</sys:String>
    <sys:String x:Key="FileNameEmptyError">ファイル名を空にすることはできません</sys:String>
</ResourceDictionary>